# coding=utf-8
# --------------------------------------------------------------------------
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model


class CertificateAuthority(Model):
    """CertificateAuthority.

    You probably want to use the sub-classes and not this class directly. Known
    sub-classes are: PrivatePreviewManagedCertificateAuthority

    Variables are only populated by the server, and will be ignored when
    sending a request.

    All required parameters must be populated in order to send to Azure.

    :ivar name: The certificate authority identifier. A Case-insensitive
     string (up to 64 characters long) of ASCII 7-bit alphanumeric
     characters plus certain special characters . _ -. No special characters
     allowed at start or end.
    :vartype name: str
    :ivar created_date_time_utc: The DateTime this resource was created in
     UTC.
    :vartype created_date_time_utc: datetime
    :ivar last_updated_date_time_utc: The DateTime this resource was last
     updated in UTC.
    :vartype last_updated_date_time_utc: datetime
    :ivar e_tag: The ETag of the device record.
    :vartype e_tag: str
    :param certificate_authority_type: Required. Constant filled by server.
    :type certificate_authority_type: str
    """

    _validation = {
        "name": {"readonly": True},
        "created_date_time_utc": {"readonly": True},
        "last_updated_date_time_utc": {"readonly": True},
        "e_tag": {"readonly": True},
        "certificate_authority_type": {"required": True},
    }

    _attribute_map = {
        "name": {"key": "name", "type": "str"},
        "created_date_time_utc": {"key": "createdDateTimeUtc", "type": "iso-8601"},
        "last_updated_date_time_utc": {"key": "lastUpdatedDateTimeUtc", "type": "iso-8601"},
        "e_tag": {"key": "eTag", "type": "str"},
        "certificate_authority_type": {"key": "certificateAuthorityType", "type": "str"},
    }

    _subtype_map = {
        "certificate_authority_type": {
            "PrivatePreviewManagedCertificateAuthority": "PrivatePreviewManagedCertificateAuthority"
        }
    }

    def __init__(self, **kwargs) -> None:
        super(CertificateAuthority, self).__init__(**kwargs)
        self.name = None
        self.created_date_time_utc = None
        self.last_updated_date_time_utc = None
        self.e_tag = None
        self.certificate_authority_type = None
