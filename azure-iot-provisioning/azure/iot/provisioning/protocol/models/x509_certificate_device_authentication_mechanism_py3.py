# coding=utf-8
# --------------------------------------------------------------------------
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from .device_authentication_mechanism_py3 import DeviceAuthenticationMechanism


class X509CertificateDeviceAuthenticationMechanism(DeviceAuthenticationMechanism):
    """Device identity is matched with X509 certificate presented to the service.

    Variables are only populated by the server, and will be ignored when
    sending a request.

    All required parameters must be populated in order to send to Azure.

    :param device_authentication_type: Required. Constant filled by server.
    :type device_authentication_type: str
    :param certificate: Required. Device identity is matched with X509
     certificate presented to the service. Basic Constraints X.509 certificate
     extension must be set to Subject Type = "End Entity" in this certificate.
    :type certificate: str
    :ivar certificate_metadata: The certificate metadata.
    :vartype certificate_metadata: ~protocol.models.CertificateMetadata
    """

    _validation = {
        "device_authentication_type": {"required": True},
        "certificate": {"required": True},
        "certificate_metadata": {"readonly": True},
    }

    _attribute_map = {
        "device_authentication_type": {"key": "deviceAuthenticationType", "type": "str"},
        "certificate": {"key": "certificate", "type": "str"},
        "certificate_metadata": {"key": "certificateMetadata", "type": "CertificateMetadata"},
    }

    def __init__(self, *, certificate: str, **kwargs) -> None:
        super(X509CertificateDeviceAuthenticationMechanism, self).__init__(**kwargs)
        self.certificate = certificate
        self.certificate_metadata = None
        self.device_authentication_type = "X509CertificateDeviceAuthenticationMechanism"
