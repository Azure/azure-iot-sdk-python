name: ReleaseBuild_$(BuildID)_$(Date:yyyyMMdd)$(Rev:.r)

steps:

- task: DownloadBuildArtifacts@0
  inputs:
    buildType: 'specific'
    project: 'f9b79625-2860-4d92-a4ee-57b03fabfd10'  # azure-iot-sdks
    pipeline: '296'  # iot-sdks-internal-mirror pipeline
    buildVersionToDownload: 'latest'
    downloadType: 'single'
    downloadPath: $(System.ArtifactsDirectory)\internal
    artifactName: 'python' # script (azure-iot-sdk-bump-version.ps1) location

- checkout: self  # self represents the repo where the initial Pipelines YAML file was found
  persistCredentials: 'true'  # set to 'true' to leave the OAuth token in the Git config after the initial fetch
  clean: 'resources'
  
- task: UsePythonVersion@0
  inputs:
    versionSpec: '3.x'
    addToPath: true
    architecture: 'x64'

- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: |
      . $(Build.SourcesDirectory)\scripts\build-release.ps1
      Build
  env:
    dist: $(System.ArtifactsDirectory)\dist
    sources: $(Build.SourcesDirectory)
    device_version_part: $(azure-iot-device-version-part)
    nspkg_version_part: $(azure-iot-nspkg-version-part)
    hub_version_part: $(azure-iot-hub-version-part)
  displayName: 'build release artifacts'

- task: UsePythonVersion@0
  inputs:
    versionSpec: '2.7'
    addToPath: true
    architecture: 'x64'

- task: CmdLine@2
  inputs:
    script: |
      IF [%VERSION%] EQU [] ( 
          echo Skipping azure-iot-nskpg Python2 build
          GOTO EOF
      )

      pushd %LOCATION%
      pip install wheel
      python --version
      python.exe setup.py bdist_wheel
      robocopy /V %LOCATION%\dist %DIST%\azure-iot-nspkg
      popd
      IF %ERRORLEVEL% == 1 exit /b 0
      :EOF
  env:
    dist: $(System.ArtifactsDirectory)\dist
    location: $(Build.SourcesDirectory)\azure-iot-nspkg
    version: $(azure-iot-nspkg-version-part)
  displayName: 'build nspkg for python2'

- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: |
      if($env:branch -eq "true") {
        . $(System.ArtifactsDirectory)\internal\python\azure-iot-sdk-bump-version.ps1
        Publish-Branch $env:githubname $env:githubemail $env:tagname $env:sources
      }
  env:
    sources: $(Build.SourcesDirectory)
    githubemail: aziotclb@microsoft.com
    githubname: 'Azure IoT Client Build'
    tagname: $(tagname)
    branch: $(branch)
  enabled: 'true'
  displayName: 'create GitHub.com release branch'

- task: PublishBuildArtifacts@1
  displayName: 'publish release artifacts'
  inputs:
      PathtoPublish: $(System.ArtifactsDirectory)\dist
      ArtifactName: 'dist'
      publishLocation: 'Container'
  enabled: 'true'
